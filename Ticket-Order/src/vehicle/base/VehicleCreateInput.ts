/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumVehicleCategory } from "./EnumVehicleCategory";
import {
  IsEnum,
  IsOptional,
  IsString,
  IsNumber,
  ValidateNested,
} from "class-validator";
import { SeatCreateNestedManyWithoutVehiclesInput } from "./SeatCreateNestedManyWithoutVehiclesInput";
import { Type } from "class-transformer";
import { TravelCreateNestedManyWithoutVehiclesInput } from "./TravelCreateNestedManyWithoutVehiclesInput";

@InputType()
class VehicleCreateInput {
  @ApiProperty({
    required: false,
    enum: EnumVehicleCategory,
  })
  @IsEnum(EnumVehicleCategory)
  @IsOptional()
  @Field(() => EnumVehicleCategory, {
    nullable: true,
  })
  category?: "Bus" | "Train" | "Airplaine" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  color?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  corporation?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  numberOfSeats?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  numberPlate?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  ownerNationalId?: string | null;

  @ApiProperty({
    required: false,
    type: () => SeatCreateNestedManyWithoutVehiclesInput,
  })
  @ValidateNested()
  @Type(() => SeatCreateNestedManyWithoutVehiclesInput)
  @IsOptional()
  @Field(() => SeatCreateNestedManyWithoutVehiclesInput, {
    nullable: true,
  })
  seats?: SeatCreateNestedManyWithoutVehiclesInput;

  @ApiProperty({
    required: false,
    type: () => TravelCreateNestedManyWithoutVehiclesInput,
  })
  @ValidateNested()
  @Type(() => TravelCreateNestedManyWithoutVehiclesInput)
  @IsOptional()
  @Field(() => TravelCreateNestedManyWithoutVehiclesInput, {
    nullable: true,
  })
  travelId?: TravelCreateNestedManyWithoutVehiclesInput;
}

export { VehicleCreateInput as VehicleCreateInput };
