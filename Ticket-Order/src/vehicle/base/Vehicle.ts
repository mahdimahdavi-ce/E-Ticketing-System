/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumVehicleCategory } from "./EnumVehicleCategory";
import {
  IsEnum,
  IsOptional,
  IsString,
  IsDate,
  IsNumber,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { Seat } from "../../seat/base/Seat";
import { Travel } from "../../travel/base/Travel";

@ObjectType()
class Vehicle {
  @ApiProperty({
    required: false,
    enum: EnumVehicleCategory,
  })
  @IsEnum(EnumVehicleCategory)
  @IsOptional()
  @Field(() => EnumVehicleCategory, {
    nullable: true,
  })
  category?: "Bus" | "Train" | "Airplaine" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  color!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  corporation!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  numberOfSeats!: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  numberPlate!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  ownerNationalId!: string | null;

  @ApiProperty({
    required: false,
    type: () => [Seat],
  })
  @ValidateNested()
  @Type(() => Seat)
  @IsOptional()
  seats?: Array<Seat>;

  @ApiProperty({
    required: false,
    type: () => [Travel],
  })
  @ValidateNested()
  @Type(() => Travel)
  @IsOptional()
  travelId?: Array<Travel>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { Vehicle as Vehicle };
